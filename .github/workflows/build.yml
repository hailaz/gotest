name: build

on:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.head_ref, 'cli/') && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout Github Code
        uses: actions/checkout@v3
      
      - name: Set Up Golang Environment
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.3
      - run: echo 'The triggering workflow passed'
      - name: show tag
        run: |
          echo ${GITHUB_HEAD_REF#*/}
          newTag=${{github.head_ref}}
          echo $newTag
          echo "thisTag=${GITHUB_HEAD_REF#*/}" >> "$GITHUB_ENV"
      - name: thisTag
        run: echo "${{ env.thisTag }}"
      - name: build
        run: |
          cd cmd/gfly
          go build -o temp/gfly
          ls -l temp
      - name: Create Github Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:     ${{ env.thisTag }}
          name: GoFrame Release ${{ env.thisTag }}
          draft:        false
          prerelease:   false
      
      - name: Upload Release Asset
        id:   upload-release-asset
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["cmd/gfly/temp/*"]'
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      
